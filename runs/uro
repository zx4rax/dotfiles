#!/bin/bash


# Exit on any error
set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m' # No Color

# Directory for the virtual environment
VENV_DIR="$HOME/.uro-venv"

# Check if Python3 is installed
if ! command -v python3 &> /dev/null; then
    echo -e "${RED}Error: Python3 is not installed. Installing it...${NC}"
    sudo apt update
    sudo apt install -y python3 python3-venv
fi

# Verify Python version
echo -e "${GREEN}Python version:${NC} $(python3 --version)"

# Create virtual environment if it doesnâ€™t exist
if [ ! -d "$VENV_DIR" ]; then
    echo -e "${GREEN}Creating virtual environment at $VENV_DIR...${NC}"
    python3 -m venv "$VENV_DIR"
else
    echo -e "${GREEN}Using existing virtual environment at $VENV_DIR...${NC}"
fi

# Activate the virtual environment
source "$VENV_DIR/bin/activate"

# Upgrade pip in the venv
echo -e "${GREEN}Upgrading pip in virtual environment...${NC}"
pip install --upgrade pip

# Install uro from GitHub
echo -e "${GREEN}Installing uro from https://github.com/s0md3v/uro.git...${NC}"
pip install git+https://github.com/s0md3v/uro.git -v

# Check if uro is installed
if command -v uro &> /dev/null; then
    echo -e "${GREEN}uro installed successfully! Version:${NC} $(uro --version)"
else
    echo -e "${RED}Error: uro installation failed. Check output above.${NC}"
    deactivate
    exit 1
fi

# Deactivate the virtual environment
deactivate

# Create a wrapper script for easy use
WRAPPER="$HOME/bin/uro-wrapper"
mkdir -p "$HOME/bin"
cat << EOF > "$WRAPPER"
#!/bin/bash
source "$VENV_DIR/bin/activate"
uro "\$@"
deactivate
EOF
chmod +x "$WRAPPER"

# Add ~/bin to PATH if not already there
if [[ ":$PATH:" != *":$HOME/bin:"* ]]; then
    echo -e "${GREEN}Adding ~/bin to PATH in ~/.bashrc...${NC}"
    echo 'export PATH="$HOME/bin:$PATH"' >> "$HOME/.bashrc"
    export PATH="$HOME/bin:$PATH"
fi

echo -e "${GREEN}Installation complete!${NC}"
echo "Run 'uro-wrapper' to use uro, or source the venv manually with:"
echo "  source $VENV_DIR/bin/activate"
echo "  uro -h"
echo "Deactivate with 'deactivate' when done."
